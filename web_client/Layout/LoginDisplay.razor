@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.AspNetCore.Components.Authorization

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ILocalStorageService LocalStorageService
@inject IJSRuntime iJSRuntime
@using System.Text.Json

<AuthorizeView>
    <Authorized>
        Hello, @context.User.Identity?.Name!
        <button class="nav-link btn btn-link" @onclick="BeginLogOut">Log out</button>
    </Authorized>
    <NotAuthorized>
        <a href="authentication/login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    public void BeginLogOut()
    {
        Navigation.NavigateToLogout("authentication/logout");
    }

    protected override async Task OnParametersSetAsync()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            string key = "Microsoft.AspNetCore.Components.WebAssembly.Authentication.CachedAuthSettings";
            string authSettingsRAW = await iJSRuntime.InvokeAsync<string>("sessionStorage.getItem", key);
            CachedAuthSettings authSettings = JsonSerializer.Deserialize<CachedAuthSettings>(authSettingsRAW);
            string userRAW = await iJSRuntime.InvokeAsync<string>("sessionStorage.getItem", authSettings?.OIDCUserKey);
            CognitoUser userC = JsonSerializer.Deserialize<CognitoUser>(userRAW);

            await LocalStorageService.SetItemAsync("token", userC.access_token);
        }

    }

    public class CachedAuthSettings
    {
        public string authority { get; set; }
        public string metadataUrl { get; set; }
        public string client_id { get; set; }
        public string[] defaultScopes { get; set; }
        public string redirect_uri { get; set; }
        public string post_logout_redirect_uri { get; set; }
        public string response_type { get; set; }
        public string response_mode { get; set; }
        public string scope { get; set; }

        public string OIDCUserKey => $"oidc.user:{authority}:{client_id}";
    }

    public class CognitoUser
    {
        public string id_token { get; set; }
        public string access_token { get; set; }
        public string refresh_token { get; set; }
        public string token_type { get; set; }
        public string scope { get; set; }
        public int expires_at { get; set; }
    }
}
